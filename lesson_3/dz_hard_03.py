#__author__ = 'Гродзинский Дмитрий Александрович'
import json

# Задание-1:
# Написать программу, выполняющую операции (сложение и вычитание) с простыми дробями.
# Дроби вводятся и выводятся в формате:
# n x/y ,где n - целая часть, x - числитель, у - знаменатель.
# Дроби могут быть отрицательные и не иметь целой части, или иметь только целую часть.
# Примеры:
# Ввод: 5/6 + 4/7 (всё выражение вводится целиком в виде строки)
# Вывод: 1 17/42  (результат обязательно упростить и выделить целую часть)
# Ввод: -2/3 - -2
# Вывод: 1 1/3


# Задание-2:
# Дана ведомость расчета заработной платы (файл "data/workers").
# Рассчитайте зарплату всех работников, зная что они получат полный оклад,
# если отработают норму часов. Если же они отработали меньше нормы,
# то их ЗП уменьшается пропорционально, а за заждый час переработки
# они получают удвоенную ЗП, пропорциональную норме.
# Кол-во часов, которые были отработаны, указаны в файле "data/hours_of"
salary = 100
working_hours = {'Basiliu': 8, 'Dmitry': 7, 'Peter': 9}
j_dict_hours = json.dumps(working_hours)

with open('data/hours_of.txt', 'w', encoding='UTF-8') as file:
    file.write(j_dict_hours)
with open('data/hours_of.txt', 'r', encoding='UTF-8') as file:
    temp = file.read()
res_dict = json.loads(temp)
print(temp)

working_salary = {'Basiliu': 0, 'Dmitry': 0, 'Peter': 0}
for i in working_hours:
    if res_dict[i] <= 8:
        working_salary[i] = res_dict[i] * 100
    elif res_dict[i] > 8:
        working_salary[i] = 800 + ((res_dict[i] - 8) * 200)
j_dict_salary = json.dumps(working_salary)

with open('data/workers.txt', 'w', encoding='UTF-8') as file:
    file.write(j_dict_salary)

# Задание-3:
# Дан файл ("data/fruits") со списком фруктов.
# Записать в новые файлы все фрукты, начинающиеся с определенной буквы.
# Т.е. в одном файле будут все фрукты на букву “А”, во втором на “Б” и т.д.
# Файлы назвать соответственно.
# Пример имен файлов: fruits_А, fruits_Б, fruits_В ….
# Важно! Обратите внимание, что нет фруктов, начинающихся с некоторых букв.
# Напишите универсальный код, который будет работать с любым списком фруктов
# и распределять по файлам в зависимости от первых букв, имеющихся в списке фруктов.
# Подсказка:
# Чтобы получить список больших букв русского алфавита:
# print(list(map(chr, range(ord('А'), ord('Я')+1))))